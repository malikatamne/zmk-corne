/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define BASE 0
#define NAV 1
#define NUMBERS 2
#define SYMBOLS 3
#define SPECIAL 4

#define SC_COPY LC(C)
#define SC_PAST LC(V)
#define SC_CUT  LC(X)
#define SC_UNDO LC(Z)
#define SC_REDO LC(Y)
#define SC_SAVE LC(S)

/ { 
behaviors {  
	   hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <130>;
            #quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
  };
  keymap {
    compatible = "zmk,keymap";

    default_layer {
      bindings = <
      &none	&kp Q 		&kp W 		&kp F	 	&kp P 		 		&kp B                   &kp J 			&kp L 		 &kp U 		 &kp Y 		&kp SEMI	&none	
      &none	&hm LGUI A 	&hm LALT R 	&hm LCTRL S &hm LSHIFT T 		&kp G                   &kp M 			&hm RSHIFT N &hm RCTRL E &hm RALT I &hm RGUI O	&none
      &none	&kp Z 		&kp X		&kp C	 	&kp D 		 		&kp V                   &kp K 			&kp H 		 &kp COMMA 	 &kp DOT 	&kp SLASH	&none
								&kp ESCAPE  &lt NUMBERS SPACE 	&lt SYMBOLS TAB  		&lt SPECIAL RET &lt NAV BSPC &kp DEL 			
      >;
    };

    nav_layer {
      bindings = <
      &none	&none 		&none 		&none 		&none 		&none                   &none       &none 		&none 		&none 		&none	&none
      &none	&kp LEFT 		&kp DOWN 	&kp UP 		&kp RIGHT 	&none                   &none       &kp RSHIFT  &kp RCTRL   &kp RALT    &kp RGUI	&none
      &none	&kp HOME 		&kp PG_DN 	&kp PG_UP 	&kp END 	&none                   &none       &none 		&none 		&none 		&none	&none
                                &kp ESCAPE  &kp SPACE 	&kp TAB       			&none  		&none 		&none
      >;
    };

    numbers_layer {
      bindings = <
      &none	&none 		&none 		&kp SC_SAVE &none 		&none               	&kp KP_ASTERISK &kp N7 		&kp N8 		&kp N9 	&kp KP_SLASH	&none
      &none	&kp SC_REDO 	&kp SC_UNDO &kp SC_PAST &kp SC_COPY &kp SC_CUT          	&kp KP_PLUS     &kp N4 		&kp N5 		&kp N6 	&kp KP_MINUS	&none
      &none	&none 		&none 		&none 		&none 		&none               	&none        	&kp N1 		&kp N2 		&kp N3 	&kp KP_EQUAL	&none
                                &trans		&trans		&none      				&kp KP_DOT      &kp KP_N0   &kp KP_COMMA
      >; 
    };

    symbols_layer {
      bindings = <
      &none	&none       &none 		&none 		&none 		&none                   &kp LBRC 	&kp AMPS 	&kp PIPE2 	&kp BSLH 	&kp RBRC   	&none  
      &none	&kp LSHIFT  &kp LCTRL   	&kp LALT    &kp LGUI 	&none               	&kp LPAR 	&kp DLLR 	&kp PRCNT 	&kp CARET 	&kp RPAR   	&none   
      &none	&none       &none 		&none 		&none 		&none                   &kp LBKT 	&kp EXCL 	&kp AT 		&kp HASH 	&kp RBKT  	&none    
								&none  		&none 		&none       			&kp APOS    &kp DQT     &kp UNDER 
      >;
    };

    special_layer {
      bindings = <
      &none	&none       &none 		&none 		&none 		&none                 	&none 		&kp F7 		&kp F8 		&kp F9 		&kp F12	&none
      &none	&kp LSHIFT  &kp LCTRL   	&kp LALT    &kp LGUI 	&none             		&none     	&kp F4 		&kp F5 		&kp F6 		&kp F11	&none
      &none	&none       &none 		&none 		&none 		&none                 	&none       &kp F1 		&kp F2 		&kp F3 		&kp F10	&none
								&none  		&none 		&none          			&kp RET  	&kp BSPC  	&kp DEL 
      >;
    };

  };
};
